{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  loginID: \"\",\n  loginPassword: \"\",\n  loginErrorMsg: \"\",\n  isLogin: localStorage.getItem(\"token\") !== null ? true : false,\n  token: localStorage.getItem(\"token\")\n};\nexport const LoginSlice = createSlice({\n  name: \"Login\",\n  initialState: {\n    ...initialState\n  },\n  reducers: {\n    inputLoginID: function (state, action) {\n      state.loginID = action.payload;\n    },\n    inputLoginPassword: function (state, action) {\n      state.loginPassword = action.payload;\n    },\n    logIsLogin: function (state, action) {\n      state.isLogin = action.payload;\n    },\n    logLoginErrorMessage: function (state, action) {\n      state.loginErrorMsg = action.payload;\n    },\n    inputToken: function (state, action) {\n      state.loginID = action.payload;\n    },\n    setLogout: function (state) {\n      state = {\n        ...initialState,\n        isLogin: localStorage.removeItem('token')\n      };\n    }\n  }\n});\nexport const {\n  inputLoginID,\n  inputLoginPassword,\n  logLoginErrorMessage,\n  logIsLogin,\n  inputToken,\n  setLogout\n} = LoginSlice.actions;\nexport default LoginSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","loginID","loginPassword","loginErrorMsg","isLogin","localStorage","getItem","token","LoginSlice","name","reducers","inputLoginID","state","action","payload","inputLoginPassword","logIsLogin","logLoginErrorMessage","inputToken","setLogout","removeItem","actions","reducer"],"sources":["C:/Users/A/Desktop/新增資料夾/my-app_bankapp/src/Slice/loginSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loginID: \"\",\r\n  loginPassword: \"\",\r\n  loginErrorMsg: \"\",\r\n  isLogin: localStorage.getItem(\"token\") !== null ? true : false,\r\n  token:localStorage.getItem(\"token\")\r\n  \r\n};\r\n\r\nexport const LoginSlice = createSlice({\r\n  name: \"Login\",\r\n  initialState: { ...initialState },\r\n  reducers: {\r\n\r\n    inputLoginID: function (state, action) {\r\n      state.loginID = action.payload; \r\n    },\r\n    inputLoginPassword: function (state, action) {\r\n      state.loginPassword = action.payload;\r\n    },\r\n    logIsLogin: function (state, action) {\r\n      state.isLogin = action.payload;\r\n    },\r\n    logLoginErrorMessage: function (state, action) {\r\n      state.loginErrorMsg = action.payload;\r\n    }, \r\n    inputToken: function (state, action) {\r\n      state.loginID = action.payload; \r\n    },\r\n    setLogout: function (state) {\r\n      state = {...initialState,isLogin:localStorage.removeItem('token')}\r\n    },\r\n  \r\n  },\r\n});\r\n\r\nexport const {\r\n  inputLoginID,\r\n  inputLoginPassword,\r\n  logLoginErrorMessage,\r\n  logIsLogin,\r\n  inputToken,\r\n  setLogout\r\n} = LoginSlice.actions;\r\n\r\nexport default LoginSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,aAAa,EAAE,EAAE;EACjBC,aAAa,EAAE,EAAE;EACjBC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK;EAC9DC,KAAK,EAACF,YAAY,CAACC,OAAO,CAAC,OAAO;AAEpC,CAAC;AAED,OAAO,MAAME,UAAU,GAAGT,WAAW,CAAC;EACpCU,IAAI,EAAE,OAAO;EACbT,YAAY,EAAE;IAAE,GAAGA;EAAa,CAAC;EACjCU,QAAQ,EAAE;IAERC,YAAY,EAAE,UAAUC,KAAK,EAAEC,MAAM,EAAE;MACrCD,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,kBAAkB,EAAE,UAAUH,KAAK,EAAEC,MAAM,EAAE;MAC3CD,KAAK,CAACV,aAAa,GAAGW,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,UAAU,EAAE,UAAUJ,KAAK,EAAEC,MAAM,EAAE;MACnCD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,oBAAoB,EAAE,UAAUL,KAAK,EAAEC,MAAM,EAAE;MAC7CD,KAAK,CAACT,aAAa,GAAGU,MAAM,CAACC,OAAO;IACtC,CAAC;IACDI,UAAU,EAAE,UAAUN,KAAK,EAAEC,MAAM,EAAE;MACnCD,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACC,OAAO;IAChC,CAAC;IACDK,SAAS,EAAE,UAAUP,KAAK,EAAE;MAC1BA,KAAK,GAAG;QAAC,GAAGZ,YAAY;QAACI,OAAO,EAACC,YAAY,CAACe,UAAU,CAAC,OAAO;MAAC,CAAC;IACpE;EAEF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXT,YAAY;EACZI,kBAAkB;EAClBE,oBAAoB;EACpBD,UAAU;EACVE,UAAU;EACVC;AACF,CAAC,GAAGX,UAAU,CAACa,OAAO;AAEtB,eAAeb,UAAU,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}